import org.apache.tools.ant.taskdefs.condition.Os

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "35.0.0"
        minSdkVersion = 24
        compileSdkVersion = 35
        targetSdkVersion = 35
        kotlinVersion = "1.8.22"
        ndkVersion = "26.1.10909125"

        // Add these version configurations for react-native-svg
        androidXVersion = "1.9.0"
        kotlinCompilerExtensionVersion = "1.5.3"

        // Add specific versions for react-native-svg
        reactNativeVersion = "0.72.7"  // Update this to match your react-native version
        androidXAnnotation = "1.6.0"
        androidXAppcompat = "1.6.1"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.1.1"
        classpath "com.facebook.react:react-native-gradle-plugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

// Add this block
configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        force "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlinVersion"
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        maven {
            url 'https://sdk.withpersona.com/android/releases'
        }
    }

    // Add this configuration for all projects
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "11"  // Set to 11 to match Java compilation
        }
    }

    // For Java compilation
    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
}

subprojects {
    project ->
    if (project.name.contains('react-native-firebase')) {
        buildscript {
            dependencies {
                classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
            }
        }
    }
}

afterEvaluate { project ->
    if (project.hasProperty("android")) {
        android {
            compileSdkVersion rootProject.ext.compileSdkVersion
            buildToolsVersion rootProject.ext.buildToolsVersion

            // Add these configurations
            configurations.all {
                resolutionStrategy {
                    force "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
                    force "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlinVersion"
                }
            }
        }
    }
}

// Add these tasks at the end
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}
